---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: mlchain-redis
  name: mlchain-redis
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: mlchain-redis
  name: mlchain-redis
rules:
  - apiGroups:
      - "*"
    resources:
      - "*"
    verbs:
      - "*"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: mlchain-redis
  name: mlchain-redis
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: mlchain-redis
subjects:
  - kind: ServiceAccount
    name: mlchain-redis

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mlchain-redis
  namespace: mlchain
spec:
  selector:
    matchLabels:
      app: mlchain-redis # has to match .spec.template.metadata.labels
  serviceName: "mlchain-redis"
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: mlchain-redis # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: mlchain-redis
      containers:
        - name: mlchain-redis
          image: redis:6-alpine
          ports:
            - containerPort: 6379
              name: redis-p
          command:
            [
              "redis-server",
              "--save",
              "20",
              "1",
              "--loglevel",
              "warning",
              "--requirepass",
              "$(REDIS_PASSWORD)",
            ]
          resources:
            limits:
              cpu: 500m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 102Mi
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mlchain-credentials
                  key: redis-password
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
          volumeMounts:
            - name: redis-data
              mountPath: /data
      volumes:
        - name: redis-data
          hostPath:
            path: /root/mlchain/db/redis/data
            type: DirectoryOrCreate

---
apiVersion: v1
kind: Service
metadata:
  name: mlchain-redis
  namespace: mlchain
spec:
  selector:
    app: mlchain-redis
  type: ClusterIP
  clusterIP: None
  ports:
    - name: redis
      protocol: TCP
      port: 6379
      targetPort: 6379

