apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mlchain-worker
  namespace: mlchain
  labels:
    app: mlchain-worker
    app.kubernetes.io/instance: mlchain-worker
spec:
  serviceName: 'mlchain-worker'
  replicas: 1
  selector:
    matchLabels:
      app: mlchain-worker
  template:
    metadata:
      labels:
        app: mlchain-worker
    spec:
      volumes:
        - name: mlchain-api-storage
          hostPath:
            path: /root/mlchain/app/api/storage
            type: DirectoryOrCreate
      containers:
        - name: mlchain-worker
          image: langgenius/mlchain-api:0.6.9
          ports:
            - containerPort: 5001
              protocol: TCP
          env:
            - name: CONSOLE_WEB_URL
              value: ''
            - name: MODE
              value: worker
            - name: LOG_LEVEL
              value: INFO
            - name: SECRET_KEY
              value: 'sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mlchain-credentials
                  key: pg-username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mlchain-credentials
                  key: pg-password
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: mlchain-credentials
                  key: pg-host
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: mlchain-credentials
                  key: pg-port
            - name: DB_DATABASE
              value: mlchain
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: mlchain-credentials
                  key: redis-host
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: mlchain-credentials
                  key: redis-port
              # default redis username is empty
            - name: REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mlchain-credentials
                  key: redis-username
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mlchain-credentials
                  key: redis-password
            - name: REDIS_USE_SSL
              value: 'false'
            - name: REDIS_DB
              value: '0'
            - name: CELERY_BROKER_URL
              value: >-
                redis://$(REDIS_USERNAME):$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)/1
            - name: WEB_API_CORS_ALLOW_ORIGINS
              value: '*'
            - name: CONSOLE_CORS_ALLOW_ORIGINS
              value: '*'
            - name: STORAGE_TYPE
              value: '*'
            - name: STORAGE_LOCAL_PATH
              value: /app/api/storage
            - name: VECTOR_STORE
              value: weaviate
            - name: WEAVIATE_HOST
              valueFrom:
                secretKeyRef:
                  name: mlchain-credentials
                  key: weaviate-host
            - name: WEAVIATE_PORT
              valueFrom:
                secretKeyRef:
                  name: mlchain-credentials
                  key: weaviate-port
            - name: WEAVIATE_ENDPOINT
              value: http://$(WEAVIATE_HOST):$(WEAVIATE_PORT)
            - name: WEAVIATE_API_KEY
              value: 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'
          resources: {}
          volumeMounts:
            - name: mlchain-api-storage
              mountPath: /app/api/storage
          imagePullPolicy: IfNotPresent
      restartPolicy: Always



